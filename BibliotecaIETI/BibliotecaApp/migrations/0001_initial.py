# Generated by Django 5.0.4 on 2024-04-26 16:33

import BibliotecaApp.managers
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemCatalogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_catalogo', models.CharField(max_length=200, unique=True)),
                ('titulo', models.CharField(max_length=200)),
                ('ocio', models.TextField()),
                ('autor', models.CharField(max_length=200)),
                ('data_edicion', models.DateField()),
                ('cantidad', models.IntegerField(default=0)),
                ('cantidad_disponible', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='BR',
            fields=[
                ('itemcatalogo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='BibliotecaApp.itemcatalogo')),
                ('estudio', models.CharField(max_length=100)),
                ('formato_video', models.CharField(max_length=50)),
                ('extras', models.TextField()),
            ],
            bases=('BibliotecaApp.itemcatalogo',),
        ),
        migrations.CreateModel(
            name='CD',
            fields=[
                ('itemcatalogo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='BibliotecaApp.itemcatalogo')),
                ('discografica', models.CharField(max_length=100)),
                ('estilo', models.CharField(max_length=100)),
                ('duracion', models.TimeField()),
            ],
            bases=('BibliotecaApp.itemcatalogo',),
        ),
        migrations.CreateModel(
            name='Dispositivo',
            fields=[
                ('itemcatalogo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='BibliotecaApp.itemcatalogo')),
                ('marca', models.CharField(max_length=100)),
                ('modelo', models.CharField(max_length=100)),
                ('tipo_conexion', models.CharField(max_length=100)),
                ('sistema_operativo', models.CharField(max_length=100)),
                ('almacenamiento', models.CharField(max_length=100)),
            ],
            bases=('BibliotecaApp.itemcatalogo',),
        ),
        migrations.CreateModel(
            name='DVD',
            fields=[
                ('itemcatalogo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='BibliotecaApp.itemcatalogo')),
                ('director', models.CharField(max_length=100)),
                ('duracion', models.DurationField()),
                ('subtitulos', models.BooleanField(default=True)),
                ('idiomas_audio', models.CharField(max_length=100)),
                ('formato_video', models.CharField(max_length=50)),
            ],
            bases=('BibliotecaApp.itemcatalogo',),
        ),
        migrations.CreateModel(
            name='Libro',
            fields=[
                ('itemcatalogo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='BibliotecaApp.itemcatalogo')),
                ('CDU', models.CharField(max_length=100)),
                ('ISBN', models.CharField(max_length=30)),
                ('editorial', models.CharField(max_length=100)),
                ('coleccion', models.CharField(max_length=100, null=True)),
                ('paginas', models.IntegerField(default=0)),
            ],
            bases=('BibliotecaApp.itemcatalogo',),
        ),
        migrations.CreateModel(
            name='Ejemplar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=200)),
                ('disponible', models.BooleanField(default=True)),
                ('elemento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BibliotecaApp.itemcatalogo')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('fecha_nacimiento', models.DateField(null=True)),
                ('centro', models.CharField(max_length=100)),
                ('ciclo', models.CharField(max_length=100)),
                ('roles', models.CharField(max_length=100)),
                ('image', models.ImageField(default='default.jpg', upload_to='profile_photos')),
                ('has_password_changed', models.BooleanField(default=False)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='email')),
                ('groups', models.ManyToManyField(blank=True, related_name='biblioteca_user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='biblioteca_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', BibliotecaApp.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_reserva', models.DateTimeField(auto_now_add=True)),
                ('ejemplar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BibliotecaApp.ejemplar')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prestamo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_prestamo', models.DateTimeField(auto_now_add=True)),
                ('fecha_devolucion', models.DateTimeField(blank=True, null=True)),
                ('ejemplar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BibliotecaApp.ejemplar')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Peticion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_peticion', models.DateTimeField(auto_now_add=True)),
                ('elemento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BibliotecaApp.itemcatalogo')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evento', models.CharField(max_length=200)),
                ('nivel', models.CharField(choices=[('INFO', 'INFO'), ('WARNING', 'WARNING'), ('ERROR', 'ERROR'), ('FATAL', 'FATAL')], max_length=20)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
